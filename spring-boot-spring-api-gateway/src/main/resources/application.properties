# Application name
spring.application.name=spring-boot-spring-api-gateway

# Server port configuration
server.port=8085

# Enable service discovery for Spring Cloud Gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Route configuration for Cart Service
spring.cloud.gateway.routes[0].id=SPRING-BOOT-SPRING-BOOK-CART
spring.cloud.gateway.routes[0].uri=lb://SPRING-BOOT-SPRING-BOOK-CART
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/cart/**
spring.cloud.gateway.routes[0].filters[0]=AuthenticationFilter

# Route configuration for Book Management Service
spring.cloud.gateway.routes[1].id=SPRING-BOOT-SPRING-BOOK-MANAGEMENT
spring.cloud.gateway.routes[1].uri=lb://SPRING-BOOT-SPRING-BOOK-MANAGEMENT
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/books/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter

# Route configuration for Order Service
spring.cloud.gateway.routes[2].id=SPRING-BOOT-SPRING-BOOK-ORDER
spring.cloud.gateway.routes[2].uri=lb://SPRING-BOOT-SPRING-BOOK-ORDER
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[3].id=SPRING-BOOT-SPRING-BOOK-USER
spring.cloud.gateway.routes[3].uri=lb://SPRING-BOOT-SPRING-BOOK-USER
spring.cloud.gateway.routes[3].predicates[0]=Path=/auth/**

# Eureka client configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

spring.cloud.gateway.globalcors.cors-configurations[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations[/**].allowedMethods=GET,POST,PUT,DELETE
spring.cloud.gateway.globalcors.cors-configurations[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations[/**].maxAge=3600